<template>
	<view class="content">
		<!-- <view @tap="loginOut()">退出登录</view> -->
		<text class="tab">基本设置</text>

		<text class="title">显示置顶文章</text>
		<text class="describe">开启后首页会显示置顶文章</text>

		<text class="title">清除缓存</text>
		<text class="describe">0</text>

		<view @click="showloginDialog">
			<text class="title">退出</text>
			<text class="describe">退出登录</text>
		</view>

		<!-- <neil-modal @close="closeModal()" :show="loginDialogShow" title="温馨提示" content="确定退出登录吗？" @cancel="bindBtn('cancel')" @confirm="bindBtn('confirm')"></neil-modal> -->

		<view class="line"></view>

		<text class="tab">其他设置</text>
		<text class="title">列表动画</text>
		<text class="describe">缩放</text>
		<text class="title">主题颜色</text>
		<text class="describe">设置App的主题颜色</text>
		<view class="line"></view>

		<text class="tab">关于</text>
		<text class="title">版本</text>
		<text class="describe">当前版本1.0.0</text>
		<text class="title">作者</text>
		<text class="describe">Darshan1358</text>
		<text class="title">项目源码</text>
		<text class="describe">https://github.com/darshan1358/wan-android</text>
		<text class="title">版权声明</text>
		<text class="describe">仅作个人及非商业用途</text>

		<uni-popup ref="popup" type="dialog">
			<uni-popup-dialog type="base" content="是否退出登录" :duration="2000" :before-close="true" @close="close" @confirm="confirm"></uni-popup-dialog>
		</uni-popup>
	</view>
</template>

<script>
	import uniPopup from '@/components/uni-popup/uni-popup.vue'
	import uniPopupDialog from '@/components/uni-popup/uni-popup-dialog.vue'
	import {
		logout
	} from '../../api/userApi.js'

	export default {
		components: {
			uniPopup,
			uniPopupDialog
		},
		data() {
			return {
			};
		},
		onLoad() {
			let res = uni.getStorageInfoSync();
			console.log(JSON.stringify(res));
		},
		methods: {
			loginOut: async function() {
				const res = await logout();
				
				uni.showLoading({
					title: '退出登录中'
				})
				
				if(!res) {
					uni.hideLoading();
					uni.showToast({
						title: '退出失败',
						icon: 'none'
					})
					return;
				}
				
				uni.hideLoading();
				
				uni.setStorage({
					key: 'userData',
					data: '',
					success() {
						uni.switchTab({
							url: '/pages/tabs/mine'
						});
					}
				});
			},
			bindBtn: function(type) {
				if (type === "confirm") {
					this.loginOut();
				}
			},
			showloginDialog: function() {
				this.$refs.popup.open();
			},
			/**
			 * 点击取消按钮触发
			 * @param {Object} done
			 */
			close: function(done) {
				done()
				this.bindBtn('cancel');
			},
			/**
			 * 点击确认按钮触发
			 * @param {Object} done
			 * @param {Object} value
			 */
			confirm: function(done, value) {
				done()
				this.bindBtn('confirm');
			}
		}
	};
</script>

<style>
	.content {
		padding-left: 30rpx;
		padding-right: 30rpx;
		padding-bottom: 30rpx;
		background-color: #FFFFFF;
	}

	.tab {
		margin-top: 40rpx;
		color: #0081ff;
		font-size: 25rpx;
	}

	.title {
		margin-top: 40rpx;
		font-size: 28rpx;
	}

	.describe {
		margin-top: 5rpx;
		font-size: 25rpx;
		color: #555555;
	}

	.line {
		/* width: 100%; */
		height: 2rpx;
		background-color: #C8C7CC;
		margin-top: 30rpx;
	}
</style>
